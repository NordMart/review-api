apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: main
  annotations:
    pipelinesascode.tekton.dev/on-event: "[push]"
    pipelinesascode.tekton.dev/on-target-branch: "main"
    pipelinesascode.tekton.dev/task: "[git-clone, 
    https://raw.githubusercontent.com/stakater-tekton-catalog/create-git-tag/0.0.12/task/stakater-create-git-tag/stakater-create-git-tag.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/code-linting/0.0.4/task/stakater-code-linting/stakater-code-linting.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/kube-linting/0.0.7/task/stakater-kube-linting/stakater-kube-linting.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/unit-test/0.0.6/task/stakater-unit-test/stakater-unit-test.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/sonarqube-scan/0.0.12/task/stakater-sonarqube-scan/stakater-sonarqube-scan.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/buildah/0.0.29/task/stakater-buildah/stakater-buildah.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/trivy-scan/0.0.4/task/stakater-trivy-scan/stakater-trivy-scan.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/rox-image-scan/0.0.4/task/stakater-rox-image-scan/stakater-rox-image-scan.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/rox-deployment-check/0.0.4/task/stakater-rox-deployment-check/stakater-rox-deployment-check.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/rox-image-check/0.0.7/task/stakater-rox-image-check/stakater-rox-image-check.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/checkov-scan/0.0.4/task/stakater-checkov-scan/stakater-checkov-scan.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/github-update-cd-repo/0.0.12/task/stakater-github-update-cd-repo/stakater-github-update-cd-repo.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/push-main-tag/0.0.11/task/stakater-push-main-tag/stakater-push-main-tag.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/helm-push/0.0.17/task/stakater-helm-push/stakater-helm-push.yaml]"
    pipelinesascode.tekton.dev/max-keep-runs: "2"

spec:
  params:
    - name: repo_url
      value: "git@github.com:DESTINATION_ORG/review-api.git"
    - name: git_revision
      value: {{revision}}
    - name: repo_path
      value: {{repo_name}}
    - name: image_registry
      value: nexus-docker-stakater-nexus.ROUTE_SUBDOMAIN/review-api
    - name: helm_registry
      value: >-
        https://nexus-helm-stakater-nexus.ROUTE_SUBDOMAIN/repository/helm-charts/
  pipelineSpec:
    params:
      - name: repo_url
      - name: git_revision
      - name: repo_path
      - name: image_registry
      - name: helm_registry
    workspaces:
      - name: source
      - name: ssh-directory

    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
          kind: ClusterTask
        workspaces:
          - name: output
            workspace: source
          - name: ssh-directory
            workspace: ssh-directory
        params:
          - name: depth
            value: "0"
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.git_revision)

      - name: create-git-tag
        runAfter:
          - fetch-repository
        taskRef:
          name: stakater-create-git-tag
          kind: Task
        params:
          - name: PR_NUMBER
            value: "NA"
          - name: GIT_REVISION
            value: $(params.git_revision)
        workspaces:
          - name: source
            workspace: source
          - name: ssh-directory
            workspace: ssh-directory

      - name: code-linting
        runAfter:
          - create-git-tag
        taskRef:
          name: stakater-code-linting
          kind: Task
        workspaces:
          - name: source
            workspace: source

      - name: kube-linting
        runAfter:
          - create-git-tag
        taskRef:
          name: stakater-kube-linting
          kind: Task
        params:
          - name: FILE
            value: manifest.yaml
          - name: DEPLOYMENT_FILES_PATH
            value: deploy
          - name: NAMESPACE
            value: TENANT-build
        workspaces:
          - name: source
            workspace: source

      - name: unit-test
        runAfter:
          - code-linting
          - kube-linting
        taskRef:
          name: stakater-unit-test
          kind: Task
        workspaces:
          - name: source
            workspace: source

      - name: sonarqube-scan
        runAfter:
          - unit-test
        taskRef:
          name: stakater-sonarqube-scan
          kind: Task
        params:
          - name: SONAR_HOST_URL
            value: https://sonarqube-stakater-sonarqube.ROUTE_SUBDOMAIN
          - name: SONAR_PROJECT_KEY
            value: $(params.repo_path)
          - name: SONAR_LOGIN
        workspaces:
          - name: source
            workspace: source

      - name: buildah
        runAfter:
          - unit-test
        taskRef:
          name: stakater-buildah
          kind: Task
        params:
          - name: IMAGE
            value: $(params.image_registry):$(tasks.create-git-tag.results.GIT_TAG)
          - name: TLSVERIFY
            value: "false"
          - name: FORMAT
            value: "docker"
          - name: BUILD_IMAGE
            value: "true"
          - name: IMAGE_REGISTRY
            value: $(params.image_registry)
          - name: CURRENT_GIT_TAG
            value: $(tasks.create-git-tag.results.CURRENT_GIT_TAG)
        workspaces:
          - name: source
            workspace: source

      - name: trivy-scan
        runAfter:
          - buildah
          - sonarqube-scan
        taskRef:
          name: stakater-trivy-scan
          kind: Task
        params:
          - name: IMAGE
            value: $(params.image_registry):$(tasks.create-git-tag.results.GIT_TAG)
        workspaces:
          - name: source
            workspace: source

      - name: checkov-scan
        runAfter:
          - buildah
          - sonarqube-scan
        taskRef:
          name: stakater-checkov-scan
          kind: Task
        workspaces:
          - name: source
            workspace: source

      - name: helm-push
        runAfter:
          - trivy-scan
          - checkov-scan
        taskRef:
          name: stakater-helm-push
          kind: Task
        params:
          - name: PR_NUMBER
            value: "NA"
          - name: REPO_PATH
            value: $(params.repo_path)
          - name: GIT_REVISION
            value: $(params.git_revision)
          - name: REGISTRY
            value: $(params.helm_registry)
          - name: SEM_VER
            value: $(tasks.create-git-tag.results.GIT_TAG)
        workspaces:
          - name: source
            workspace: source
      - name: update-cd-repo
        runAfter:
          - helm-push
        taskRef:
          kind: Task
          name: stakater-github-update-cd-repo
        params:
          - name: IMAGE_TAG
            value: $(tasks.create-git-tag.results.GIT_TAG)
          - name: IMAGE_NAME
            value: $(params.image_registry)
          - name: PR_NUMBER
            value: "NA"
          - name: REPO_PATH
            value: $(params.repo_path)
          - name: GIT_REVISION
            value: main
          - name: NAMESPACE
            value: arsenal-dev
          - name: ENVIRONMENT
            value: dev
          - name: HELM_REGISTRY
            value: $(params.helm_registry)
          - name: CD_REPO_URL
            value: git@github.com:DESTINATION_ORG/apps-gitops-config.git
        workspaces:
          - name: source
            workspace: source
          - name: ssh-directory
            workspace: cd-ssh-creds

      - name: push-main-tag
        runAfter:
          - update-cd-repo
        taskRef:
          kind: Task
          name: stakater-push-main-tag
        params:
          - name: PR_NUMBER
            value: "NA"
          - name: GIT_REVISION
            value: $(params.git_revision)
          - name: IMAGE_TAG
            value: $(tasks.create-git-tag.results.GIT_TAG)
        workspaces:
          - name: source
            workspace: source
          - name: ssh-directory
            workspace: ssh-directory

  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    - name: ssh-directory
      secret:
        secretName: nordmart-api-ssh-creds
    - name: cd-ssh-creds
      secret:
        secretName: cd-ssh-creds
