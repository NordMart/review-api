apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: pullrequest-review-api
  annotations:
    pipelinesascode.tekton.dev/on-event: "[]" # Trigger the pipelineRun on pull_request or main events
    pipelinesascode.tekton.dev/on-target-branch: "main"
    pipelinesascode.tekton.dev/task: "[git-clone,
    https://raw.githubusercontent.com/stakater-tekton-catalog/create-git-tag/0.0.12/task/stakater-create-git-tag/stakater-create-git-tag.yaml]" # The tasks will be fetched from Tekton Hub. We can also provide direct links to yaml files
    pipelinesascode.tekton.dev/max-keep-runs: "2" # Only remain 2 latest pipelineRuns on SAAP
spec:
  params:
    - name: repo_url
      value: {{body.repository.ssh_url}} # Place your repo SSH URL
    - name: git_revision
      value: {{revision}} # Dynamic variable to fetch branch name of the push event on your repo
    - name: repo_name
      value: {{repo_name}} # Dynamic varaible to fetch repo name
    - name: repo_path
      value: "review-api"
    - name: git_branch
      value: {{source_branch}}
    - name: pull_request_number
      value: {{pull_request_number}}
    - name: organization
      value: {{body.organization.login}}
  pipelineSpec: # Define what parameters will be used for pipeline
    params:
      - name: repo_url
      - name: git_revision
      - name: repo_name
      - name: repo_path
      - name: pull_request_number
      - name: organization
      - name: git_branch
    workspaces: # Mention what workspaces will be used by this pipeline to store data and used by data transferring between tasks
      - name: source
      - name: ssh-directory
    tasks: # Mention what tasks will be used by this pipeline
      - name: fetch-repository #Name what you want to call the task
        taskRef:
          name: git-clone # Name of tasks mentioned in tekton-catalog
          kind: ClusterTask
        workspaces: # Mention what workspaces will be used by this task
          - name: output
            workspace: source
          - name: ssh-directory
            workspace: ssh-directory
        params: # Parameters will be used by this task
          - name: depth
            value: "0"
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.git_revision)
  workspaces: # Mention Workspaces configuration
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 2Gi
    - name: ssh-directory # Using ssh-directory workspace for our task to have better security
      secret:
        secretName: git-ssh-creds # Created this secret earlier
    - name: repo-token
      secret:
        secretName: git-pat-creds
