apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:

  name: code-linting
  annotations:
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-target-branch: "main"
    pipelinesascode.tekton.dev/task: "[git-clone,
    https://raw.githubusercontent.com/stakater-tekton-catalog/create-git-tag/0.0.12/task/stakater-create-git-tag/stakater-create-git-tag.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/create-environment/0.0.18/task/stakater-create-environment/stakater-create-environment.yaml,
    https://raw.githubusercontent.com/stakater-tekton-catalog/code-linting-mvn/0.0.4/task/stakater-code-linting/stakater-code-linting.yaml]"
    pipelinesascode.tekton.dev/max-keep-runs: "2"

spec:
  params:
    - name: repo_url
      value: {{body.pull_request.head.repo.ssh_url}}
    - name: git_revision
      value: {{revision}}
    - name: repo_path
      value: {{repo_name}}
    - name: git_branch
      value: {{source_branch}}
    - name: pull_request_number
      value: {{pull_request_number}}
    - name: organization
      value: {{body.pull_request.head.repo.owner.login}}
  pipelineSpec:
    params:
      - name: repo_url
      - name: git_revision
      - name: repo_path
      - name: pull_request_number
      - name: organization
      - name: git_branch

    workspaces:
      - name: source
      - name: ssh-directory

    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
          kind: ClusterTask
        workspaces:
          - name: output
            workspace: source
          - name: ssh-directory
            workspace: ssh-directory
        params:
          - name: depth
            value: "0"
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.git_revision)

      - name: create-git-tag
        runAfter:
          - fetch-repository
        taskRef:
          name: stakater-create-git-tag
          kind: Task
        params:
          - name: PR_NUMBER
            value: $(params.pull_request_number)
          - name: GIT_REVISION
            value: $(params.git_revision)
        workspaces:
          - name: source
            workspace: source
          - name: ssh-directory
            workspace: ssh-directory

      - name: stakater-create-environment
        runAfter:
          - create-git-tag
        taskRef:
          kind: Task
          name: stakater-create-environment
        params:
          - name: CREATE_ON_CLUSTER
            value: "true"
          - name: REPO_NAME
            value: $(params.repo_path)
          - name: PR_NUMBER
            value: $(params.pull_request_number)
          - name: GIT_URL
            value: https://github.com/NordMartTestZone/review-api.git
          - name: GIT_BRANCH
            value: $(params.git_branch)
          - name: IMAGE_TAG
            value: $(tasks.create-git-tag.results.GIT_TAG)
          - name: PULL_REQUEST_COMMITS_API
            value: https://api.github.com/repos/$(params.organization)/$(params.repo_path)/pulls/$(params.pull_request_number)/commits
        workspaces:
          - name: output
            workspace: source
          - name: repo-token
            workspace: repo-token

      - name: code-linting
        runAfter:
          - stakater-create-environment
        taskRef:
          name: stakater-code-linting
          kind: Task
        workspaces:
          - name: source
            workspace: source

  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    - name: ssh-directory
      secret:
        secretName: nordmart-api-ssh-creds
    - name: cd-ssh-creds
      secret:
        secretName: cd-ssh-creds
    - name: repo-token
      secret:
        secretName: git-pat-creds
